# 테스트 자동화
## 필요한 이유
- 소프트웨어의 장애가 일상 생활에 영향을 끼치는 크기가 점차 커짐 > 안정성 요구
- 테스트에 개발보다 많은 시간이 소요될 위험 > 효율화 요규

## 장점과 단점
- 장점
  - 빠름
  - 신뢰성
- 단점
  - UI 파악 불가
  - 테스트 스크립트 관리 필요

## 종류 : 아래로 갈수록 최신 세대
- Record & Playback
  - 사용자 입력을 기억했다가 재생
  - 마우스 x,y 좌표나 키보드 입력을 기억하거나 object나 element를 인식하는 방법
  - SeleniumIDE, QTP, 대부분 RPA
- **Use/Reuse of functions**
  - 동작을 모듈 단위로 세분화
  - Ex : 로그인 기능 / 메뉴 바로 가기 기능 / ...
- **Data Driven Scripts**
  - 다양한 Data Input이 곧 테스트인 경우
  - DataInput을 별도로 지정해 입력 받는 방법
- Keyword Driven Scripts
  - 테스트 코드를 자연어와 유사하게 저장
  - 테스트 코드에 대한 설명이 불필요
- Codeless Automation
  - 코드 없이 UI 기반으로 작성하여 사용자의 개발 역량에 무관
  - ACCELQ, Perfecto
- AI Test
  - AI 자동화 테스트
  - SiTest, Eggplant

## 테스트 대상
- 서버 환경 설정
- 개발된 코드(단위 테스트)
- 인프라 환경
- 연동상태 점검

## 테스트 시점
- 배포 전 파일 빌드시
- Git 업로드시

## 도구
- Selenium
  - 여러 테스트 자동화의 표준
  - FrameWork로 이후 세대 기능들도 지원
  - 사용법
    - https://www.whatap.io/ko/blog/39/
    - https://testmanager.tistory.com/28
  - 다른 자동화 툴과 달리 로그인 등을 해결할 수 있어 사용에 유리
  - 속도가 현저히 느림
- SpringMockMVC
  - (나중에 찾아볼 것)
- ACCELQ
  - CodelessAutomation

### Selenium
#### 종류
- **SeleniumIDE** : 크롬, 파이어폭스 등에서 확장 프로그램으로 사용. Record&Playback과 script 편집, 저장을 지원하며 Java, Python 등으로 export 가능
- **SeleniumWebDriver** : Maven Repository를 통해 사용. Code 단위 편집이 가능. headless driver를 사용하면 browser 화면 없이 구동 가능

#### SeleniumIDE
- 사용 가능한 Commands : https://www.selenium.dev/selenium-ide/docs/en/api/commands 참조
  - assert 통해 값 조정 가능
  - wait for ~~ 통해 SPA의 경우 데이터가 나타날 때까지 기다릴 수 있음
  - element 하위 데이터(원자값)를 사용할 store vlaue로 저장 가능. 이후 사용할 땐 ${}를 씌워 사용
- 사용 예
  - 현재 주소를 불러오는 법 : excute script | return window.location.href | myUrl
  - element 값을 저장하는 법 : store value | name=roleDivCd | myRoleDivCd
  - 저장한 element 값을 사용하는 법 : assert | ${myRoleDivCd} | "예시"
  - 마우스를 hover해 메뉴가 등장하게 하는 법 : mouse over | linkTest=고객관리
  - SPA에서 page 이동 대기 : wait for element not present | name=pwd | 1000
- 주의
  - 기본적 사용법은 간단하나 왼쪽 상단이 Tests/Test suites/Excuting 에 따라 수행할 수 있는 기능에 차이가 있음
    - Tests : 새 테스트 만들기, 테스트 내보내기 등 테스트 관리
    - Test suites : 테스트 묶음 생성 및 관리
    - Excuting : 현재 실행 중인 Test들의 list

#### SeleniumWebDriver
- SeleniumGrid 통해 parallel computing 가능
- Maven Repository : https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/2.41.0
- 필요절차(Gradle)- java기준 작성
  - Gradle import
    > // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java<br/>
    > implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.41.0'<br/>
    > // https://mvnrepository.com/artifact/junit/junit<br/>
    > implementation group: 'junit', name: 'junit', version: '4.12'
  - chromedriver 다운로드 및 경로 설정
    - chrome 정보 설정 확인 후 적절한 버전으로 chromedriver 설치
    - 경로 설정(new ChromeDriver() 생성 전)
    > System.setProperty("webdriver.chrome.driver","/{저장된 경로}/chromedriver");
  - 사용
    > WebDriver driver = new ChromeDriver();<br/>
    > JavascriptExecutor js = (JavascriptExecutor) driver; //Javascript 실행할 객체<br/>
    > Map<String, Object> vars = new HashMap<String, Object>(); //자료 저장용
  - 객체 찾는 법
    - selenium.By 사용(https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/By.html)
      > driver.findElement(By.name("name"));

      - name
      - cssSelector
      - className
      - ...
      - **xpath**
        - / : root노드
        - // : 하위 노드 **ex) /tr//div : 루트노드-tr노드 하위 div노드
        - * : any tag
        - . : 현재 노드
        - {tag}[@id='{ID}'] : id가 ID인 노드
        - {tag}[@{속성명}='속성'] : 속성명이 속성인 노드
        - {tag}[contains(., '텍스트')] : 현재 노드가 '텍스트'를 포함한 경우
  - headless 사용(화면 띄우지 않고 수행)
    > ChromeOptions options = new ChromeOptions();<br/>
      options.addArguments("headless");<br/>
      WebDriver driver = new ChromeDriver(options);
  - 주의
    - SPA의 경우 loading 속도와 selenium 코드 진행 속도가 차이나서 loading 전에 element를 요구하게 될 수 있다.<br/>
      selenium.support.ui.WebDriverWait을 적절히 사용하여 이러한 에러를 방지할 수 있도록 하자

# 참조
- LINE에서 테스트 자동화 경험 : https://engineering.linecorp.com/ko/blog/server-side-test-automation-journey-1/
- 테스트 자동화의 종류 : https://velog.io/@chacha/Robot-FrameworkKeyword-Driven-Test-Automation-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%8B%A4%ED%96%89-fjk5w2ew5k
- 2015년 글이지만 Selenium 사용법 : https://ojava.tistory.com/62
- Python이지만 2020년 Selenium 사용법 : https://velog.io/@chacha/%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%90%EB%8F%99%ED%99%94-tool-%EC%A0%95%EB%A6%AC-2%ED%83%84-Selenium-jkk58zqj1c
- ACCELQ 사용법 : https://ko.myservername.com/accelq-codeless-api-test-automation-tool-review-tutorial
- 2020 top 10 codeless automation tools : https://www.lambdatest.com/blog/10-top-codeless-testing-tools-2021/
